version: '3.3'


services:
  api:
    image: ${INFERENCE_API_IMAGE_NAME}
    restart: always
    depends_on:
      - mongo
      - minio
      - nats
    env_file: 
      - api_envs/database.env
      - api_envs/authentication.env
      - api_envs/message_service.env
      - api_envs/message_listener.env
      - api_envs/simple_storage.env
    command: python main.py
    ports:
      - 3000:8000

  mongo:
    image: mongo
    restart: always
    env_file:
      - api_envs/mongo.env

  mongo-express:
    image: mongo-express
    restart: always
    env_file:
      - api_envs/mongo.env
    ports:
      - 8081:8081

  nats:
    image: nats:2.8.4
    restart: always
    ports:
      - 4222:4222
      - 8222:8222

  minio:
    image: minio/minio
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data --console-address ':9001' --address ':9000'
    volumes:
      - minio_data:/data
    env_file:
      - api_envs/minio.env

  mlflow-mc:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /tmp/wait-for-it.sh minio:9000;
      /usr/bin/mc alias set minio ${MLFLOW_S3_ENDPOINT_URL} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb minio/mlflow;
      exit 0;
      "
    volumes:
      - ./wait-for-it.sh:/tmp/wait-for-it.sh

  db:
    image: mysql:latest
    restart: always
    ports:
      - 3306:3306
    env_file:
      - api_envs/mlflow/mysql.env
    volumes:
      - dbdata:/var/lib/mysql

  mlflow:
    image: ${MLFLOW_SERVER_IMAGE_NAME}
    restart: always
    ports:
      - 5000:5000
    env_file:
      - api_envs/mlflow/mlflow.env
    command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0

volumes:
  dbdata:
  minio_data:

  