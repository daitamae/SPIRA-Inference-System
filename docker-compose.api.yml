version: '3.3'


services:
  api:
    image: ${INFERENCE_API_IMAGE_NAME}
    command: python main.py
    ports:
      - ${API_PORT}:${API_INNER_PORT}
    depends_on:
      - mongo
      - minio
      - nats
    env_file: 
      - .env
    deploy:
      replicas: ${API_NUM_REPLICAS}
      restart_policy:
        condition: on-failure

  mongo:
    image: mongo
    env_file: 
      - .env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure


  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    env_file: 
      - .env
    ports:
      - ${ME_PORT}:${ME_INNER_PORT}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  nats:
    image: nats:2.8.4
    ports:
      - ${NATS_PORT_1}:${NATS_INNER_PORT_1}
      - ${NATS_PORT_2}:${NATS_INNER_PORT_2}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  minio:
    image: minio/minio
    command: server /data --console-address ':${MINIO_INNER_PORT_2}' --address ':${MINIO_INNER_PORT_1}'
    ports:
      - ${MINIO_PORT_1}:${MINIO_INNER_PORT_1}
      - ${MINIO_PORT_2}:${MINIO_INNER_PORT_2}
    volumes:
      - minio_data:/data
    env_file: 
      - .env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  mlflow-mc:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /tmp/wait-for-it.sh minio:${MINIO_INNER_PORT_1};
      /usr/bin/mc alias set minio ${MLFLOW_S3_ENDPOINT_URL} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb minio/mlflow;
      exit 0;
      "
    volumes:
      - ./wait-for-it.sh:/tmp/wait-for-it.sh
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  db:
    image: mysql:latest
    ports:
      - ${MLFLOW_DB_PORT}:${MLFLOW_DB_INNER_PORT}
    env_file: 
      - .env
    volumes:
      - dbdata:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  mlflow:
    image: ${MLFLOW_SERVER_IMAGE_NAME}
    command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:${MLFLOW_DB_INNER_PORT}/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0
    depends_on: 
      - db
      - minio
    ports:
      - ${MLFLOW_PORT}:${MLFLOW_INNER_PORT}
    env_file: 
      - .env
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  dbdata:
  minio_data:

  
